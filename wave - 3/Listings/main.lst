C51 COMPILER V9.54   MAIN                                                                  07/12/2024 22:15:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -ain.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include "OLED.h"
   3          #include "AT24C02.h"
   4          #include "Delay.h"
   5          #include "TEST_MainPage.h"
   6          #include "XPT2046.h"
   7          #include "Key.h"
   8          #include "math.h"
   9          unsigned char k,p,i,j,fg=0,max,min,Dv=0,Dw,flag=0,wmax,wmin,turn=0,mv=0,xp,xxp=1;
  10          float cnt;
  11          int Dd;
  12          unsigned char D[8]={0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  13          unsigned char KeyNum;
  14          float s=1,m=1,n=0;
  15          int ADValue1,chr;
  16          unsigned int DataValue[256]={0};
  17          void main()
  18          {
  19   1        Timer0_Init();
*** WARNING C206 IN LINE 19 OF main.c: 'Timer0_Init': missing function-prototype
  20   1        OLED_Init();
  21   1        while(1)
  22   1        {
  23   2        turn=0;
  24   2        KeyNum=MatrixKey();
  25   2        if(KeyNum==1){flag=1;}
  26   2        if(KeyNum==2){flag=0;}
  27   2        if(KeyNum==3){s=s*2;}
  28   2        if(KeyNum==4){s=s/2;}
  29   2        if(KeyNum==5){turn=1;KeyNum=0;}
  30   2        if(KeyNum==6){turn=2;KeyNum=0;}
  31   2        if(KeyNum==7){flag=2;}
  32   2        if(KeyNum==8){mv++;}
  33   2        if(KeyNum==9){if(mv>0){mv--;}}
  34   2        if(KeyNum==10){xxp++;}
  35   2        if(KeyNum==11){xxp--;}
  36   2        if(flag==1){OLED_WriteCommand(0x2E);
  37   3        }
  38   2        if(flag==2){
  39   3        OLED_Clear();
  40   3        for(k=1;k<128;k++)
  41   3          {
  42   4          Dd=DataValue[k+mv]-DataValue[k-1+mv];
  43   4          if(Dd>0){oled_Draw_szLine2(k,DataValue[k+mv],DataValue[k+mv]+Dd);}
  44   4          if(Dd<=0){oled_Draw_szLine2(k,DataValue[k+mv]+Dd,DataValue[k+mv]);}
  45   4        }
  46   3          OLED_WriteCommand(0x2E);
  47   3          flag=1;
  48   3        }
  49   2        if(flag==0){
  50   3        OLED_WriteCommand(0x2E);
  51   3        OLED_WriteCommand(0x26);
  52   3        OLED_WriteCommand(0x00);
  53   3        OLED_WriteCommand(0x02);
C51 COMPILER V9.54   MAIN                                                                  07/12/2024 22:15:03 PAGE 2   

  54   3        OLED_WriteCommand(0x07);
  55   3        OLED_WriteCommand(0x07);
  56   3        OLED_WriteCommand(0x00);
  57   3        OLED_WriteCommand(0xFF);
  58   3        }
  59   2          if(fg==0){
  60   3          for(k=128+mv;k>mv;k--)
  61   3        {
  62   4          for(i=0;i<8;i++){
  63   5        OLED_SetCursor(k,i);
  64   5        OLED_WriteData(0x00);
  65   5          }
  66   4          p=7;
  67   4          ADValue1=XPT2046_ReadAD(XPT2046_XP);
  68   4          m=s;
  69   4          DataValue[k]=ADValue1*s;
  70   4          Dd=DataValue[k]-DataValue[k-1];
  71   4          if(DataValue[k]>16){
  72   5          if(Dd>0){oled_Draw_szLine2(0,DataValue[k],DataValue[k]+Dd);}
  73   5          if(Dd<=0){oled_Draw_szLine2(0,DataValue[k]+Dd,DataValue[k]);}
  74   5        }
  75   4      }
  76   3        if(flag==0){
  77   4          OLED_WriteCommand(0x2F);
  78   4        }
  79   3      
  80   3        fg=1;
  81   3        }
  82   2          if(fg==1){
  83   3          k=0;
  84   3          for(i=0;i<8;i++){
  85   4        OLED_SetCursor(k,i);
  86   4        OLED_WriteData(0x00);
  87   4          }
  88   3          p=7;
  89   3          if(xp>=xxp){
  90   4          ADValue1=XPT2046_ReadAD(XPT2046_XP);
  91   4            xp=0;
  92   4          }
  93   3          DataValue[k]=ADValue1*s;
  94   3          
  95   3            min=255;
  96   3            max=0;
  97   3          if(flag==0){
  98   4          for(k=127;k>0;k--){
  99   5            Dd=DataValue[1]-DataValue[0];
 100   5            DataValue[k+127]=DataValue[k+126];
 101   5            DataValue[k]=DataValue[k-1];
 102   5          if(DataValue[k]>max){max=DataValue[k];}
 103   5          if(DataValue[k]<min){min=DataValue[k];}
 104   5          if(DataValue[0]==max&&(DataValue[0]!=DataValue[1])){cnt=0;}
 105   5          }
 106   4              Dv=max-min;
 107   4          if(Dd>0){oled_Draw_szLine2(0,DataValue[1],DataValue[1]+Dd);}
 108   4          if(Dd<=0){oled_Draw_szLine2(0,DataValue[1]+Dd,DataValue[1]);}
 109   4      if(turn==1){
 110   5            for(i=0;i<3;i++){
 111   6        OLED_SetCursor(0,i);
 112   6        for(j=0;j<19;j++){
 113   7        OLED_WriteData(0x00);}
 114   6        }
 115   5          OLED_ShowNum(0,0,(int)1/(cnt/100),3,6);
C51 COMPILER V9.54   MAIN                                                                  07/12/2024 22:15:03 PAGE 3   

 116   5        turn==0;
*** WARNING C275 IN LINE 116 OF main.c: expression with possibly no effect
 117   5      }
 118   4      if(turn==2){
 119   5              for(i=0;i<3;i++){
 120   6        OLED_SetCursor(40,i);
 121   6        for(j=40;j<59;j++){
 122   7        OLED_WriteData(0x00);}
 123   6          OLED_ShowNum(40,0,Dv,3,6);
 124   6        turn==0;
*** WARNING C275 IN LINE 124 OF main.c: expression with possibly no effect
 125   6        }   
 126   5        }
 127   4      }
 128   3        }
 129   2          if(flag==0){
 130   3          OLED_WriteCommand(0x2F);
 131   3          }
 132   2          Delay(10);
 133   2        }
 134   1      }
 135          void Timer0_Routine() interrupt 1
 136          {
 137   1        static unsigned int T0Count;
 138   1        TL0 = 0x66;   
 139   1        TH0 = 0xFC;
 140   1        T0Count++; 
 141   1        if(T0Count>10){
 142   2          T0Count=0;
 143   2          cnt++;
 144   2          xp++;
 145   2      }
 146   1      
 147   1      }
 148          
 149          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1684    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    561    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
